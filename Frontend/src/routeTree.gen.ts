/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AdminIndexLazyImport = createFileRoute('/admin/')()
const EventoEventoLazyImport = createFileRoute('/evento/$evento')()
const AdminLoginLazyImport = createFileRoute('/admin/login')()
const IscrizioneEventoTokenLazyImport = createFileRoute(
  '/iscrizione/$evento/$token',
)()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminIndexLazyRoute = AdminIndexLazyImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin.index.lazy').then((d) => d.Route))

const EventoEventoLazyRoute = EventoEventoLazyImport.update({
  path: '/evento/$evento',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/evento.$evento.lazy').then((d) => d.Route),
)

const AdminLoginLazyRoute = AdminLoginLazyImport.update({
  path: '/admin/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/admin.login.lazy').then((d) => d.Route))

const IscrizioneEventoTokenLazyRoute = IscrizioneEventoTokenLazyImport.update({
  path: '/iscrizione/$evento/$token',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/iscrizione.$evento.$token.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/login': {
      id: '/admin/login'
      path: '/admin/login'
      fullPath: '/admin/login'
      preLoaderRoute: typeof AdminLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/evento/$evento': {
      id: '/evento/$evento'
      path: '/evento/$evento'
      fullPath: '/evento/$evento'
      preLoaderRoute: typeof EventoEventoLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/iscrizione/$evento/$token': {
      id: '/iscrizione/$evento/$token'
      path: '/iscrizione/$evento/$token'
      fullPath: '/iscrizione/$evento/$token'
      preLoaderRoute: typeof IscrizioneEventoTokenLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AdminLoginLazyRoute,
  EventoEventoLazyRoute,
  AdminIndexLazyRoute,
  IscrizioneEventoTokenLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin/login",
        "/evento/$evento",
        "/admin/",
        "/iscrizione/$evento/$token"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/admin/login": {
      "filePath": "admin.login.lazy.tsx"
    },
    "/evento/$evento": {
      "filePath": "evento.$evento.lazy.tsx"
    },
    "/admin/": {
      "filePath": "admin.index.lazy.tsx"
    },
    "/iscrizione/$evento/$token": {
      "filePath": "iscrizione.$evento.$token.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
